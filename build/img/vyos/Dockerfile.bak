ARG VYOS_VERSION
ARG BUILD_DATE

FROM debian:bookworm-slim

ENV DEBIAN_FRONTEND noninteractive

RUN /bin/echo -e 'APT::Install-Recommends "0";\nAPT::Install-Suggests "0";' > /etc/apt/apt.conf.d/01norecommends

# Base packaged needed to build packages and their package dependencies
RUN apt-get update && apt-get install -y \
      ca-certificates \
      gnupg \
      curl \
      fuse-overlayfs \
      jq \
      yq

# Copy installer script and default build settings
COPY [ "config/vyos.toml", \
       "data/live-build-config/archives/*", \
       "scripts/vyos_install_common.sh", \
       "scripts/vyos_install_stage_01.sh", \
       "/tmp/"]
COPY [ "data/architectures/*", "/tmp/architectures_triage/" ]
COPY [ "data/live-build-config/hooks/live/*", "/tmp/hooks/" ]

# Install VyOS dependencies
WORKDIR /tmp
RUN bash -c 'mv /tmp/architectures_triage/$(dpkg --print-architecture).toml /tmp && rm -rf /tmp/architectures_triage'
RUN bash /tmp/vyos_install_stage_01.sh


# Install VyOS specific software
COPY [ "config/vyos.toml", \
       "scripts/vyos_install_common.sh", \
       "scripts/vyos_install_stage_02.sh", "/tmp/" ]
COPY [ "data/architectures/*", "/tmp/architectures_triage/" ]
RUN bash -c 'mv /tmp/architectures_triage/$(dpkg --print-architecture).toml /tmp && rm -rf /tmp/architectures_triage'
RUN bash /tmp/vyos_install_stage_02.sh


# Tune system for VyOS
COPY [ "scripts/vyos_install_common.sh", "scripts/vyos_install_stage_03.sh", "/tmp/" ]
# Copy default config
COPY tools/container/config.boot.default /opt/vyatta/etc/

RUN bash /tmp/vyos_install_stage_03.sh

# Delete installer scripts
RUN rm -rf /tmp/*


# Make changes specific to the container environment

# Tell systemd that we are inside container
ENV container=docker

# Set proper STOPSIGNAL
STOPSIGNAL SIGRTMIN+3

# Run VyOS
CMD [ "/lib/systemd/systemd" ]
